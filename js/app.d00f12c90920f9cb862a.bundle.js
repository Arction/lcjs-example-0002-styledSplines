(self.webpackChunk=self.webpackChunk||[]).push([[143],{138:(e,t,a)=>{const s=a(475),r=a(27),{lightningChart:o,AxisTickStrategies:i,AxisScrollStrategies:n,PointShape:l,SolidFill:S,ColorHEX:m,Themes:p}=s,{createProgressiveRandomGenerator:c}=r,d=new Date,g=d.getTime(),u=o().ChartXY({});u.setTitle("Live power consumption").getDefaultAxisX().setTickStrategy(i.DateTime,(e=>e.setDateOrigin(d))).setInterval({start:-61e3,end:0,stopAxisAfter:!1}).setScrollStrategy(n.progressive),u.getDefaultAxisY().setTitle("Power consumption (kW)").setInterval({start:0,end:500,stopAxisAfter:!1}).setScrollStrategy(n.expansion);const h=u.addSplineSeries({pointShape:l.Circle}).setName("Power consumption").setCursorInterpolationEnabled(!1).setCursorResultTableFormatter(((e,t,a,s)=>e.addRow(t.getName()).addRow(t.axisX.formatValue(a)).addRow(t.axisY.formatValue(s)+" kW")));c().setNumberOfPoints(1e4).generate().setStreamBatchSize(1).setStreamInterval(1e3).setStreamRepeat(!0).toStream().forEach((e=>{e.x=Date.now()-g,e.y=2e3*e.y,h.add(e)}))}},e=>{e.O(0,[736],(()=>(138,e(e.s=138)))),e.O()}]);